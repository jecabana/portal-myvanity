@using MyVanity.Web.Helpers.MvcHelpers
@model MyVanity.Model.PatientDashboard.Impl.PatientDashboardViewModel

<div class="resources-template">
    <ul class="content-list-1 list-unstyled">
        <li>
            <div class="box1">
                <h4>PATIENT RESOURCES</h4>
                <p><span class="pink">Vanity Cosmetic Surgery</span> seeks to inform and empower patients allowing them to take control of their cosmetic core</p>    
            </div>
        </li>
        <li>
            <div class="box1">
                <h4>MY DOCUMENTS</h4> 
                <p><span class="pink">Here</span> you can manage your own documents, including some needed by the clinic</p>
            </div>
            <div class="box2">
                <div class="img-wrapper img-wrapper-reader"></div>
            </div>
            <div class="clearfix"></div>
            
            <a href="#" class="btn btn-submit" id="add-doc-btn"><span class="glyphicon glyphicon-file"></span>&nbsp;New Document</a>
            @{
                if (Model.HasProcedure)
                {
                    var docs = Model.PatientDocuments;
                    if (docs.Any())
                    {
                        <ul class="articles-list patient-docs list-unstyled">
                            @foreach (var doc in docs.Where(doc => !doc.Censured))
                            {
                                <li>
                                    <a href="@Url.Action("DownloadFile", "FileManaging", new { path = doc.Path })">
                                        <span class="glyphicon glyphicon-file"></span>
                                    </a> 
                                    @doc.Description
                                </li>
                            }
                        </ul>       
                    }
                }
            }
        </li>
        <li>
            <div class="box1">
                <h4>VIDEOS</h4>
                <p>Some videos to help you <span class="pink">prepare </span>and <span class="pink">recover</span></p>
            </div>
            <div class="box2">
                <div class="img-wrapper img-wrapper-camera"></div>
            </div>
            <div class="row video-list no-mar-l">
                @{
                    if (Model.HasProcedure)
                    {
                        var videos = Model.Videos;
                        foreach (var video in videos.Where(video => !video.Censured))
                        {
                            <div class="col-md-6 video-widget">
                                <video width="300" height="300" controls>
                                    <source src="@Url.Action("DownloadFile", "FileManaging", new { path = @video.Path })" type="video/mp4" />
                                    <source src="@Url.Action("DownloadFile", "FileManaging", new { path = @video.Path })" type="video/ogg" />
                                </video>
                                <p><small>@Html.StyledPinkSpanForString(model => video.Description)</small></p>
                            </div>
                            <div class="video-small-desc" style="display: none;">
                                <a href="@Url.Action("DownloadFile", "FileManaging", new { path = @video.Path })"><span class="glyphicon glyphicon-download"></span></a>
                                <span>@Html.StyledPinkSpanForString(model => video.Description)</span>
                            </div>
                        }
                    }
                }
            </div>
        </li>
        <li>
            <div class="box1">
                <h4>ARTICLES</h4>
                <small>Helpful reading for <span class="pink">pre </span>and <span class="pink">post </span>surgery</small>
            </div>
            <div class="box2">
                <div class="img-wrapper img-wrapper-articles"></div>
            </div>
            @{
                var articles = Model.Articles;
                if (articles.Count != 0)
                {
                    <ul class="articles-list list-unstyled">
                        @foreach (var article in articles.Where(article => !article.Censured))
                        {
                            <li>
                                <a href="@Url.Action("DownloadFile", "FileManaging", new {path = @article.Path})">
                                    <span class="glyphicon glyphicon-ok"></span>
                                </a>
                                @Html.StyledPinkSpanForString(model => article.Description)
                            </li>
                        }
                    </ul>
                }                
            }
        </li>
    </ul>
</div>
