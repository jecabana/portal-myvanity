@using MyVanity.Common
@using MyVanity.Web.Helpers.MvcHelpers
@model MyVanity.Model.PatientDashboard.Impl.PatientDashboardViewModel

<!-- Body header-->
<div class="row second-header">
    <div class="col-xs-12 col-sm-9 first-col">
        <div class="col-wrapper">
            <a href="#edit-profile-nav" id="edit-profile-1">
                @Html.ImageFor(model => model.Patient.PicPath, null, true, "userGlyph", 90, 90)
            </a>
            <h3>@Html.DisplayFor(model => model.Patient.FullName)</h3>
            <div class="info">
                @Html.HiddenFor(model => model.PatientProcedure.Id, new {id = "procedure-id"})

                @if (Model.PatientProcedure != null)
                {
                   @* var missingDays = Model.CalculateMissingDays();
                    var missingHours = Model.CalculateMissingHours();
                    
                    if (Model.IsProcedureToday != null && Model.IsProcedureToday.Value)
                    {
                        <p><span class="pink"> Today</span> is your procedure!, get ready</p>
                    }
                    else if(missingDays < 0)
                    {
                        <p><span class="pink"> You already</span> had this procedure!</p>
                    }
                    else
                    {
                        <p>
                            @{
                                var remaining = missingDays != 0 ? missingDays : missingHours;
                                var txt = missingDays == 0 ? "hours" : "days";
                            }
                            <span class="pink"><strong>@remaining @txt</strong></span> until a more beautiful you...
                        </p>  
                    }
                    
                    <p class="visible-xs">
                        <span class="pink"> <strong>@Html.DisplayFor(model => model.PatientProcedure.Date)</strong> </span> procedure date
                    </p>*@
                    <p>
                        <span class="pink"><strong>Performed in</strong></span> @Model.PatientProcedure.Place.Name
                    </p>
                }
                else
                {
                    <p><span class="pink">You</span> have no scheduled procedures...</p>
                }
            </div>
        </div>
    </div>
    <div class="col-xs-3 col-sm-1 second-col hidden-xs">
        <div class="col-wrapper center-block">
            <img src="@Url.Content(string.Format("~/Content/images/ic-{0}.png", Model.Genre.ToLower()))" />
            <p>@Model.Genre</p>
        </div>
    </div>
    <div class="col-xs-3 col-sm-2 third-col hidden-xs">
        <div class="col-wrapper">
                @if (Model.HasProcedure)
                {
                    @*<p class="text-center">
                        PROCEDURE<br /><br />
                        <span class="pink">@Html.DisplayFor(model => model.PatientProcedure.Date)</span><br /><br />
                        DATE
                    </p>*@
                }
            
        </div>
    </div>
</div><!-- /.Body header-->

<div class="row">
    <!--Template wrapper -->
    <div class="col-xs-12 col-sm-push-3 col-sm-9 template-col">
        <div class="row template-row">
            <div class="col-xs-12 template" id="data-nav">
                @Html.Partial(Url.Content("~/Views/PatientDashboard/Partials/Data.cshtml"), Model)
            </div>
            <div class="col-xs-12 template" id="contact-nav">
                @Html.Partial(Url.Content("~/Views/PatientDashboard/Partials/Contact.cshtml"), Model)
            </div>
            @if (Model.HasAnyAppointment)
            {
                <div class="col-xs-12 template" id="appointments-nav">
                    @Html.Partial(Url.Content("~/Views/PatientDashboard/Partials/Appointments.cshtml"), Model)
                </div>   
            }
            @if (Model.HasProcedure)
            {
                <div class="col-xs-12 template" id="resources-nav">
                    @Html.Partial(Url.Content("~/Views/PatientDashboard/Partials/Resources.cshtml"), Model)
                </div>   
            }
            @if (Model.HasAnyConsent)
	        {
		        <div class="col-xs-12 template" id="consent-nav">
                    @Html.Partial(Url.Content("~/Views/PatientDashboard/Partials/Consent.cshtml"), Model)
                </div>
	        }
            <div class="col-xs-12 template" id="edit-profile-nav">
                @Html.Partial(Url.Content("~/Views/PatientDashboard/PatientProfile.cshtml"), Model.Patient)
            </div>
        </div>
    </div><!--/.Template wrapper -->
    <!--Sidebar-->
    <div class="sidebar col-xs-12 col-sm-pull-9 col-sm-3" id="sidebar" role="navigation">
        <div class="nav">
            <div class="row">
                <div class="nav-item col-xs-6 col-sm-12 first active">
                    <div class="inner-wrapper">
                        <a href="#data-nav"><span class="glyphicon glyphicon-th"></span>DATA</a>
                    </div>
                </div>
                <div class="nav-item col-xs-6 col-sm-12 last">
                    <div class="inner-wrapper">
                        <a href="#contact-nav">
                            <span class="glyphicon glyphicon-envelope"></span>CONTACT
                            @if (Model.UnreadMessages > 0)
                            {
                                <span class="badge pull-right" id="contact-badge">@Model.UnreadMessages</span>
                            }
                        </a>
                    </div>
                </div>
                @{
                    var hasApp = Model.HasAnyAppointment ? string.Empty : "disable";
                    var scheduledNumber = Model.ScheduledAppointments;
                }
                <div class="nav-item col-xs-6 col-sm-12 first">
                    <div class="inner-wrapper @hasApp">
                        <a href="#appointments-nav">
                            <span class="glyphicon glyphicon-calendar"></span>APPOINTMENTS
                            @if (scheduledNumber > 0)
                            {
                                <span class="badge pull-right" id="appointments-badge">@scheduledNumber</span>
                            }
                        </a>
                    </div>
                </div>
                @{
                    var hasPro = Model.HasProcedure ? string.Empty : "disable";
                }
                <div class="nav-item col-xs-6 col-sm-12 last">
                    <div class="inner-wrapper @hasPro">
                        <a href="#resources-nav"><span class="glyphicon glyphicon-plus"></span>RESOURCES</a>
                    </div>
                </div>
                @{
                    var hasConsent = Model.HasAnyConsent ? string.Empty : "disable";
                    var unsigned = Model.UnsignedConsentsAmount;
                }
                <div class="nav-item col-xs-12 first last">
                    <div class="inner-wrapper @hasConsent">
                        <a href="#consent-nav">
                            <span class="glyphicon glyphicon-list-alt"></span>
                            CONSENT
                            @if (unsigned > 0)
                            {
                                <span class="badge warning pull-right" id="consent-badge">@unsigned</span>
                            }
                        </a>
                    </div>
                </div>   
            </div>
        </div>

        <div class="contact-box">
            <h4 class="title">YOUR PATIENT CARE TEAM</h4>
            <div class="coordinators-list">
                <div class="row item">
                    <div class="description col-xs-7">
                        <h4>@Model.Agent.ProfileDetails.FirstName.ToUpper()</h4>
                        <h5>Surgical Coordinator</h5>
                        <small><em>Your surgical guide</em></small>
                    </div>
                    <div class="col-xs-5">
                        @Html.ImageFor(model => model.Agent.PicPath, null, false, "noPic", 80, 65)
                    </div>
                </div>
                @if (Model.PatientProcedure != null)
                {
                    <div class="divider"></div>
                    <div class="row item">
                        <div class="description col-xs-7">
                            <h4>@Model.FinancialCoordinator.ProfileDetails.FirstName.ToUpper()</h4>
                            <h5>Financial Coordinator</h5>
                            <small><em>Resolve Any Financial questions</em></small>
                        </div>
                        <div class="col-xs-5">
                            @Html.ImageFor(model => model.PatientProcedure.FinancialCoordinator.PicPath, null, false, "noPic", 80, 65)
                        </div>
                    </div>
                    <div class="divider"></div>
                    <div class="row item">
                        <div class="description col-xs-7">
                            <h4>@Model.MedicalAssistant.ProfileDetails.FirstName.ToUpper()</h4>
                            <h5>Customer Service Coordinator</h5>
                            <small><em>Patient Experience</em></small>
                        </div>
                        <div class="col-xs-5">
                            @Html.ImageFor(model => model.PatientProcedure.MedicalAssistant.PicPath, null, false, "noPic", 80, 65)
                        </div>
                    </div>
                    if (Model.HomeAwayAssistant != null)
                    {
                    <div class="divider"></div>
                    <div class="row item">
                        <div class="description col-xs-7">
                            <h4>@Model.HomeAwayAssistant.ProfileDetails.FirstName.ToUpper()</h4>
                            <h5>Home Away Vanity Coordindator</h5>
                            <small><em>Resolve Any Financial questions</em></small>
                        </div>
                        <div class="col-xs-5">
                            @Html.ImageFor(model => model.Agent.PicPath, null, false, "noPic", 80, 65)    
                        </div> 
                    </div>
                    }
                }
             </div>
            <div class="box2">
                <div class="head">
                    <span class="glyphicon glyphicon-envelope pink"></span>
                    <span class="pink">SEND YOUR PATIENT COORDINATOR A MESSAGE</span>
                </div>
                <div>
                    <div class="row" style="clear: both;">
                        <div class="col-xs-2">
                            <label for="agents-group">To:</label>  
                        </div>
                        <div class="col-xs-10">
                            <div class="btn-group" id="agents-group">
                                <button type="button" class="btn btn-default header-btn"></button>
                                <button type="button" class="btn btn-warning dropdown-toggle" data-toggle="dropdown">
                                    <span class="caret"></span>
                                    <span class="sr-only">Toggle Dropdown</span>
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    <li><a data-agent-id="@Model.Agent.Id">@Model.Agent.ProfileDetails.FirstName</a></li>
                                    @if (Model.PatientProcedure != null)
                                    {
                                        <li><a data-agent-id="@Model.FinancialCoordinator.Id">@Model.FinancialCoordinator.ProfileDetails.FirstName</a></li>
                                        <li><a data-agent-id="@Model.MedicalAssistant.Id">@Model.MedicalAssistant.ProfileDetails.FirstName</a></li>
                                        if (Model.HomeAwayAssistant != null)
                                        {
                                            <li><a data-agent-id="@Model.HomeAwayAssistant.Id">@Model.HomeAwayAssistant.ProfileDetails.FirstName</a></li>
                                        }
                                    }
                                </ul>
                            </div>  
                        </div>
                    </div>
                    <textarea class="form-control" id="message-body" rows="3" placeholder="Write your message here and stay in touch with your patient coordinator"></textarea>
                    <span id="success-sent-message" style="display: none;">YOUR MESSAGE HAS BEEN SENT</span>

                    <button class="btn btn-submit btn-xs pull-right" data-loading-text="Sending..." id="send-btn">SEND</button>
                </div>
                <h5 class="description" style="clear: both;">
                    <small>Our office hours are M-F 9AM-6PM. Please allow 24 hours for a reply</small>
                </h5>
            </div>
        </div>
    </div><!--/.Sidebar -->
</div>

@section scripts {
    <script>
        Holder.add_theme("userGlyph", {
            background: "#c54886",
            foreground: "#ffffff",
            text: "Upload your pic!",
            size: 9
        });

        Holder.add_theme("noPic", {
            background: "#f3e4ec",
            foreground: "#CC3399",
            text: "No pic available",
            size: 9
        });

        Holder.add_theme("default", {
            background: "#F4F2F3",
            foreground: "#CC3399",
            size: 9
        });

        $(function () {
            $("#tabs").vanityTab({
                tabs: ".sidebar .nav-item",
                tabContentItem: "div.template-row div.template",
                tabMenuItem: ".nav-item a",
                initial: "#data-nav",
                extraItems: ["#edit-profile", "#edit-profile-1"]
            });

            var dashboardModule = new DashboardModule();

            var agentsModule = new AgentsModule(".contact-box", {
                btnHeader: "#agents-group .header-btn",
                agentBtns: "#agents-group ul > li > a",
                replyBtn: ".reply-btn",
                collapseBtns: ".inbox-message-collapse-btn",
                badgeSel: "#contact-badge",
                successMessage: "#success-sent-message"
            });
            dashboardModule.AddModule(agentsModule);
            agentsModule.SetAgent('@Model.Agent.Id', '@Model.Agent.ProfileDetails.FirstName');

            var options = {
                inputSel: "#fileupload",
                relPath: "@Constants.PatientPicsLocation",
                imgTagSel: "#imgContainer",
                inputGuidSel: "#picture-path",
                errorSpanSel: "#file-upload-error"
            };
            var imgUploader = new ImageUploader(options);
            dashboardModule.AddModule(imgUploader);

            var patientDocModule = new PatientDocumentsModule({
                addFileBtn: "#add-doc-btn",
                browseBtn: "#browse-btn",
                uploadBtn: "#upload-btn",
                fileNameField: "#filename",
                errorField: "#error-field",
                fileDescription: "#file-description",
                fileGuid: "#file-guid",
                procedureId: "#procedure-id"
            });
            dashboardModule.AddModule(patientDocModule);

            var appointmentModule = new DashboardAppointmentsModule({
                confirmBtn: "confirm-appointment-btn",
                cancelBtn: "cancel-appointment-btn",
                statusField: "#appointment-status-text"
            });
            dashboardModule.AddModule(appointmentModule);

            var consentModule = new ConsentModule({
                checkboxes: ".consent-checkbox",
                saveBtn: "#save-btn"
            });
            dashboardModule.AddModule(consentModule);

            var messagesModule = new DashboardMails({
                messagesContainer: "div#messages-container",
                inboxContainer: "div#inbox-messages-container",
                outboxContainer: "div#outbox-messages-container"
            }, agentsModule);
            dashboardModule.AddModule(messagesModule);

            dashboardModule.Init();
        });
    </script>
}