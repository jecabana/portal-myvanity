@model MyVanity.Model.MessageModels.MessageEditModel

@section styles {
    @Styles.Render("~/Content/css/lightboxcss")
}

@using (Html.BeginForm("Compose", "Message"))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.RepliesTo)

<div class="row">
    <div class="col-md-8">
        <div class="panel panel-info">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.ToUserName)
                        @Html.HiddenFor(model => model.ToUserId, new { id = "user-id" })
                    </div>
                    <div class="col-md-11">
                        @Html.TextBoxFor(model => model.ToUserName, new { id = "recipient", placeholder="To" })
                        <button type="button" class="btn btn-default btn-sm" id="search-users" data-toggle="tooltip" data-placement="right" title="You may search by UserName, First Name, Middle Name or Last Name.In case of Patients, they will be matched by nunber too!">
                            <span class="glyphicon glyphicon-search"></span> Search
                        </button>
                        @Html.ValidationMessageFor(model => model.ToUserId, "Please, add a receipt first")
                    </div>
                </div>
                <div class="row" style="margin-top: 10px;">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.Subject)
                    </div>
                    <div class="col-md-11">
                        @Html.TextBoxFor(model => model.Subject, new { placeholder = "Enter a subject" })
                    </div>
                </div>
            </div>
            <div class="panel-body">
                @Html.TextAreaFor(model => model.Body, new { @class= "mail-body", rows="10", placeholder="Type your message" })
            </div>
        </div>
    </div>
</div>

<input type="submit" class="btn btn-success" value="Send"/>
}

@section scripts{
    @Scripts.Render("~/bundles/js/composeMail")

    <script>
        $(function() {
            var module = new ComposeMailModule({ searchButtonId: "search-users", inputTextId: "recipient" });
            module.Init();
        })
    </script>
}